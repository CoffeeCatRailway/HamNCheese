import groovy.json.JsonOutput
import groovy.json.JsonSlurper

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabricLoaderVersion}"

    modApi("gg.moonflower:pollen:${rootProject.pollenVersion}") { transitive = false }

    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api:${rootProject.reiVersion}"
}

architectury {
    common()
}

loom {
    accessWidenerPath = file("src/main/resources/${project.modId}.accesswidener")
}

sourceSets.main.resources {
    srcDir project(":forge").file("src/generated/resources").absolutePath
    exclude project(":forge").file("src/generated/resources/.cache").absolutePath
}

processResources {
    inputs.property "id", rootProject.modId

    filesMatching("architectury.common.json") {
        expand "id": rootProject.modId
    }

    doLast {
        fileTree(dir: outputs.files.asPath, include: "**/*.json").each {
            File file -> file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
        }
    }
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = project.archivesBaseName
            from components.java
        }
    }
}